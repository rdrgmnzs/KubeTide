name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate SBOM
        uses: CycloneDX/gh-gomod-generate-sbom@v2
        with:
          version: v1
          args: mod -json -output sbom.json

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/rdrgmnzs/kubetide:latest
            ghcr.io/rdrgmnzs/kubetide:${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: true
          provenance: true

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.17.0

      - name: Update chart version and app version
        run: |
          sed -i "s/^version:.*/version: ${{ steps.version.outputs.version }}/" charts/kubetide/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: ${{ steps.version.outputs.version }}/" charts/kubetide/Chart.yaml

      - name: Package Helm Chart
        run: |
          mkdir -p dist
          helm package charts/kubetide --destination dist/

      - name: Login to GitHub Container Registry (for Helm chart)
        run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin

      - name: Push Helm Chart to GHCR
        run: |
          helm push dist/kubetide-${{ steps.version.outputs.version }}.tgz oci://ghcr.io/rdrgmnzs/kubetide/charts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/kubetide-${{ steps.version.outputs.version }}.tgz
            sbom.json
          generate_release_notes: true